local main = require(script.Parent.Parent.Parent["types"])
export type Span  = main.Span 
export type Separated<Node> = main.Separated<Node>
export type TokenKindText  = main.TokenKindText 
export type TokenKindRest  = main.TokenKindRest 
export type TokenKind  = main.TokenKind 
export type Token<T = TokenKind> = main.Token<T >
export type Expression_Nil  = main.Expression_Nil 
export type Expression_Boolean  = main.Expression_Boolean 
export type Expression_Number  = main.Expression_Number 
export type Expression_String  = main.Expression_String 
export type Expression_Table  = main.Expression_Table 
export type Expression_Lambda  = main.Expression_Lambda 
export type Expression_Evaluate  = main.Expression_Evaluate 
export type Expression_Vector  = main.Expression_Vector 
export type Expression_Var  = main.Expression_Var 
export type Expression  = main.Expression 
export type VarRoot_Global  = main.VarRoot_Global 
export type VarRoot_Name  = main.VarRoot_Name 
export type VarRoot_Paren  = main.VarRoot_Paren 
export type VarRoot  = main.VarRoot 
export type VarSuffix_NameIndex  = main.VarSuffix_NameIndex 
export type VarSuffix_ExprIndex  = main.VarSuffix_ExprIndex 
export type VarSuffix  = main.VarSuffix 
export type Var  = main.Var 
export type Command  = main.Command 
export type ExpressionOrCommand  = main.ExpressionOrCommand 
export type TableField_NameKey  = main.TableField_NameKey 
export type TableField_ExprKey  = main.TableField_ExprKey 
export type TableField_NoKey  = main.TableField_NoKey 
export type TableField  = main.TableField 
export type Table  = main.Table 
export type Stat_Assign  = main.Stat_Assign 
export type FunctionBody  = main.FunctionBody 
export type Last_Return  = main.Last_Return 
export type Last_Continue  = main.Last_Continue 
export type Last_Break  = main.Last_Break 
export type LastStatement  = main.LastStatement 
export type If  = main.If 
export type Stat_If  = main.Stat_If 
export type Stat_While  = main.Stat_While 
export type Stat_For  = main.Stat_For 
export type Statement  = main.Statement 
export type Block  = main.Block 
export type Instruction_PushNumber  = main.Instruction_PushNumber 
export type Instruction_PushBoolean  = main.Instruction_PushBoolean 
export type Instruction_PushString  = main.Instruction_PushString 
export type Instruction_PushTable  = main.Instruction_PushTable 
export type Instruction_PushFunction  = main.Instruction_PushFunction 
export type Instruction_PushVector  = main.Instruction_PushVector 
export type Instruction_PushNil  = main.Instruction_PushNil 
export type Instruction_PushGlobal  = main.Instruction_PushGlobal 
export type Instruction_PushCommand  = main.Instruction_PushCommand 
export type Instruction_PushLocal  = main.Instruction_PushLocal 
export type Instruction_Reset  = main.Instruction_Reset 
export type Instruction_Call  = main.Instruction_Call 
export type Instruction_Index  = main.Instruction_Index 
export type Instruction_SetTable  = main.Instruction_SetTable 
export type Instruction_SetGlobal  = main.Instruction_SetGlobal 
export type Instruction_SetLocal  = main.Instruction_SetLocal 
export type Instruction_If  = main.Instruction_If 
export type Instruction_IfNotNil  = main.Instruction_IfNotNil 
export type Instruction_Goto  = main.Instruction_Goto 
export type Instruction_GotoTemp  = main.Instruction_GotoTemp 
export type Instruction_Return  = main.Instruction_Return 
export type Instruction_TurnIntoIterator  = main.Instruction_TurnIntoIterator 
export type Instruction  = main.Instruction 
export type VirtualMachine  = main.VirtualMachine 
export type LogKind  = main.LogKind 
export type AnalysisSuggestion  = main.AnalysisSuggestion 
export type AnalysisInformation  = main.AnalysisInformation 
export type AnalysisCommandArgument  = main.AnalysisCommandArgument 
export type AnalysisCommandVariadic  = main.AnalysisCommandVariadic 
export type AnalysisCommand  = main.AnalysisCommand 
return main